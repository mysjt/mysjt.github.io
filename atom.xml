<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Secer</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-10T07:58:48.343Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>shiqian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>白帽子讲web安全—-读书笔记</title>
    <link href="http://yoursite.com/2018/08/09/%E7%99%BD%E5%B8%BD%E5%AD%90%E8%AE%B2web%E5%AE%89%E5%85%A8%E5%85%A8%E2%80%94-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/08/09/白帽子讲web安全全—-读书笔记/</id>
    <published>2018-08-09T15:44:29.000Z</published>
    <updated>2018-08-10T07:58:48.343Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="对安全的理解"><a href="#对安全的理解" class="headerlink" title="对安全的理解"></a>对安全的理解</h1><p>安全工程师的核心竞争力不在于拥有多少个0day，掌握多少种安全技术，而在于对安全的理解深度，以及看待安全问题的角度和高度</p><h1 id="安全问题的本质是信任的问题"><a href="#安全问题的本质是信任的问题" class="headerlink" title="安全问题的本质是信任的问题"></a>安全问题的本质是信任的问题</h1><p>对条件的信任程度，是确定对象是否安全的基础</p><p>设计安全方案时，根据其发生的可能性，需要有不同的侧重点</p><h1 id="互联网安全的核心问题，是数据安全的问题"><a href="#互联网安全的核心问题，是数据安全的问题" class="headerlink" title="互联网安全的核心问题，是数据安全的问题"></a>互联网安全的核心问题，是数据安全的问题</h1><h1 id="安全三要素"><a href="#安全三要素" class="headerlink" title="安全三要素"></a>安全三要素</h1><p>CIA:      机密性      完整性     可用性</p><p>机密性要求数据内容不能泄露，可用加密实现</p><p>完整性即保护的数据内容是完整的、没有被篡改的，可通过数字签名实现</p><p>可用性要求保护资源是“随需而得”</p><h1 id="安全评估流程"><a href="#安全评估流程" class="headerlink" title="安全评估流程"></a>安全评估流程</h1><p>资产等级划分  –&gt;威胁分析  –&gt;风险分析  –&gt; 确定解决方案</p><h1 id="安全思想"><a href="#安全思想" class="headerlink" title="安全思想"></a>安全思想</h1><p>没有绝对的安全</p><p>安全没有银弹，安全是一个持续的过程</p><p>最大的漏洞是人</p><p>安全应该是产品的一种属性</p><h1 id="白帽子兵法"><a href="#白帽子兵法" class="headerlink" title="白帽子兵法"></a>白帽子兵法</h1><p>secure  by default：白名单和黑名单、最小权限原则 </p><p>纵深防御原则：不同层面的安全方案，构成整个防御体系；在正确的地方做正确的事情</p><p>数据与代码分离原则:从本质上解决“注入”引起的问题</p><p>不可预测性原则：具有一定的随机性，可有效对抗基于篡改、伪造的攻击</p><h1 id="客户端脚本安全"><a href="#客户端脚本安全" class="headerlink" title="客户端脚本安全"></a>客户端脚本安全</h1><h3 id="1-浏览器安全"><a href="#1-浏览器安全" class="headerlink" title="1.浏览器安全"></a>1.浏览器安全</h3><p>同源策略：浏览器最基本最核心的安全功能</p><p>同源策略限制了来自不同源的document或脚本，对当前document读取或设置属性</p><p>影响源的因素：host、子域名、端口、协议</p><p>第三方插件自身的同源策略</p><p>浏览器沙箱</p><p>恶意网址拦截</p><h3 id="2-跨站脚本攻击（XSS）"><a href="#2-跨站脚本攻击（XSS）" class="headerlink" title="2.跨站脚本攻击（XSS）"></a>2.跨站脚本攻击（XSS）</h3><p>第一种：反射型XSS                  简单的把用户数据反射给浏览器，需要用户点击</p><p>第二种：存储型XSS                  把用户输入的数据存储在服务器中</p><p>第三种：DOM Based XSS        通过修改DOM节点的反射型xss</p><p>XSSPayload：实际上是JavaScript脚本   </p><p>可以：    盗取cookie</p><p>​               XSS钓鱼</p><p>​               识别用户浏览器</p><p>​               获取用户真实IP</p><p>​               XSS  worm 蠕虫</p><p>远程Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var img = document.createElement(&quot;img&quot;);</span><br><span class="line">img.src = &quot;http://blog.dyboy.cn/index.do?m=delete&amp;id=123&quot;;</span><br><span class="line">document.body.appendChild(img);</span><br></pre></td></tr></table></figure><p>类似还有表单，XMLHttpRequest</p><p><code>XSS Worm</code></p><p>CSS中 <code>background:url(&#39;javascript:alert(1)&#39;)</code></p><p><code>Flash XSS</code></p><h4 id="XSS防御：Httponly、浏览器filter"><a href="#XSS防御：Httponly、浏览器filter" class="headerlink" title="XSS防御：Httponly、浏览器filter"></a>XSS防御：Httponly、浏览器filter</h4><h3 id="3-跨站请求伪造（CSRF）"><a href="#3-跨站请求伪造（CSRF）" class="headerlink" title="3.跨站请求伪造（CSRF）"></a>3.跨站请求伪造（CSRF）</h3><p>攻击者借用用户的名义，向某一服务器发送恶意请求，对服务器来讲，这一请求是完全合法的，但攻击者确完成了一个恶意操作，比如以用户的名义发送邮件，盗取账号，购买商品等等 </p><p>原理：</p><p>#用户访问可信任站点A，并产生了相关的cookie; </p><p>#用户在访问A站点时没有退出，同时访问了危险站点B;</p><p>#网站B接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点A；  </p><p>#浏览器在接收到这些攻击性代码后，根据网站B的请求，在用户不知情的情况下携带Cookie信息，   向网站A发出请求。网站A并不知道该请求其实是由B发起的，所以会根据用户C的Cookie信息以C的权限处理该请求 </p><p>浏览器持有 <code>Third-party Cookie</code> 是本地Cookie(可设置时效，本地存储)，<code>Session Cookie</code>浏览器关闭即失效(内存中)</p><p>P3P ： 允许跨域访问隐私数据</p><h4 id="防御："><a href="#防御：" class="headerlink" title="防御："></a>防御：</h4><p>验证码、<code>Referer Check</code>，<code>Anit Csrf Token</code></p><p><code>Token</code>尽量位于表单，敏感操作改为<code>POST</code>提交，XSS做好防护，否则CSRF防御也是枉然</p><h3 id="4-点击劫持"><a href="#4-点击劫持" class="headerlink" title="4.点击劫持"></a>4.点击劫持</h3><p>攻击者通过使用一个不可见的iframe，覆盖在一个网页上，诱使用户在网页上操作，用户在不知情的情况下，恰好点击在攻击者设置好的iframe页面上的一些功能性按钮上</p><p>拖拽劫持 数据窃取  触屏劫持 </p><p>防御：</p><p><code>JavaScript</code>禁止<code>iframe</code>嵌套 HTTP头<code>X-Frame-Options</code></p><p><code>iframe</code> 可设置 <code>sandbox</code> 参数</p><h1 id="服务器端安全"><a href="#服务器端安全" class="headerlink" title="服务器端安全"></a>服务器端安全</h1><h3 id="5-SQL注入"><a href="#5-SQL注入" class="headerlink" title="5.SQL注入"></a>5.SQL注入</h3><p>注入攻击的本质，是把用户输入的数据当做代码执行，一是用户能控制输入，二是原本程序的代码，拼接了用户输入的数据</p><p>盲注 (<code>Blind Injection</code>) </p><p><code>Timing Attack</code> :mysql中 <code>BENCHMARK(count,expr)</code>函数 用于延时，当然还有<code>sleep()</code></p><p>​                             postgreSQL 中  PG_SLEEP(5)</p><p>​                              MS SQL  Server 中  WAITFOR  DELAY ‘0:0:5’   </p><p>命令注入：<code>UDF</code></p><p><code>xp_cmdshell</code> ：   在 <code>sysadmin</code> 权限下可开启<code>sp_configure</code>,<code>sp_addextendproc来</code>开启此功能</p><p><code>xp_regread</code> 操作注册表等等很多，在SQLMAP下已经集成</p><p>宽字节注入： </p><p>数据库使用GBK编码，转义符号\被吃掉   %df‘  or  1=1，为避免可统一设置为utf-8</p><h4 id="防御SQL注入："><a href="#防御SQL注入：" class="headerlink" title="防御SQL注入："></a>防御SQL注入：</h4><p>使用预编译语句，绑定变量</p><p>使用安全的存储过程</p><p>检查数据类型</p><p>使用安全函数</p><h3 id="6-XML注入"><a href="#6-XML注入" class="headerlink" title="6.XML注入"></a>6.XML注入</h3><p>代入数据，改变了xml结构 </p><h3 id="7-代码注入"><a href="#7-代码注入" class="headerlink" title="7.代码注入"></a>7.代码注入</h3><p>存在代码注入漏洞的地方，与后门没有区别，由不安全的函数或方法引起</p><p><code>eval()</code> <code>assert()</code> <code>system()</code> 等 </p><p>防御：禁用此类危险函数</p><h3 id="8-CRLF-注入"><a href="#8-CRLF-注入" class="headerlink" title="8.CRLF 注入"></a>8.CRLF 注入</h3><p>Carriage Return, Line Feed -&gt; <code>\r\n</code></p><p>使用CRLF的地方都可能存在此类型注入，如Log和HTTP头(<code>Http Response Spliting</code>)</p><h3 id="9-文件上传漏洞"><a href="#9-文件上传漏洞" class="headerlink" title="9.文件上传漏洞"></a>9.文件上传漏洞</h3><p>用户上传了一个可执行的脚本文件，并通过此脚本文件获得执行服务器端命令的能力</p><p>解析问题、脚本文件、文件包含</p><p>黑名单的检测方式，很不安全的检测方式</p><p>绕过：%00、伪造文件头</p><p><code>Apache</code>解析问题：文件名从后往前直到一个认识的文件类型为止</p><p><code>IIS</code>文件解析问题：截断字符 <code>;</code>，<code>/a.asp/</code>路径下所有类型文件当作<code>asp</code>解析，<code>PUT method</code>（上传），<code>MOVE method</code>（改名），<code>DELETE method</code>…</p><p>使用 <code>OPTIONS /HTTP/1.1</code> 探测服务器信息</p><p><code>PHP CGI</code> 路径解析问题：<code>test.jpg/.php</code>当作php脚本执行</p><p>利用上传文件钓鱼</p><h4 id="防御：-1"><a href="#防御：-1" class="headerlink" title="防御："></a>防御：</h4><p>白名单、上传目录不可写不可执行、单独设置文件域名、随机数写文件名白名单类型</p><h3 id="10-认证与会话管理"><a href="#10-认证与会话管理" class="headerlink" title="10.认证与会话管理"></a>10.认证与会话管理</h3><p><code>Authentication</code></p><p>认证实际上就是一个验证凭证的过程</p><p><code>单/双/多因素认证</code></p><p>密码策略：</p><p>OWASP 推荐策略    密码必须以不可逆的加密算法，或是单向散列函数算法，加密后存放于数据库</p><p>加salt hash</p><p><code>session</code></p><p><code>Session Fixation</code> 攻击</p><p>Session 保持攻击</p><p><code>SSO</code>（单点登录）</p><h3 id="11-访问控制"><a href="#11-访问控制" class="headerlink" title="11.访问控制"></a>11.访问控制</h3><p><code>Authorization</code> 读、写、执行</p><p>垂直和水平越权     –最小权限原则</p><p>OAuth：授权第三方应用</p><h3 id="12-加密算法与随机数"><a href="#12-加密算法与随机数" class="headerlink" title="12.加密算法与随机数"></a>12.加密算法与随机数</h3><p>分组加密算法有：DES,3-DES,Blowfish,IDEA,AES等<br> 流密码加密算法：RC4,ORYX,SEAL等</p><p><code>Reused Key Attack</code></p><p><code>Bit-flipping Attack</code></p><p>ECB模式缺陷在于 电码薄式的方式 调换明文位置，密文位置调换，如此变动可反向推算</p><p><code>Padding Oracle Attack</code></p><p><code>MD5 Length Extention Attack</code></p><p>密钥等不要硬编码在程序代码中</p><p>不要使用<code>ECB</code>模式</p><p>不要使用流密码</p><p>使用<code>HMAC-SHA1</code>代替<code>MD5</code>甚至代替<code>SHA-1</code></p><p>不要使用相同的<code>key</code>做不同的事情</p><p><code>salts</code>与 <code>IV</code> 要随机产生</p><p>不要自己实现加密算法，尽量使用安全专家已实现好的库</p><p>不要依赖系统的保密性</p><p>使用<code>CBC</code>模式的<code>AES256</code>加密</p><p>使用<code>HMAC-SHA512</code>检查完整性</p><p>使用带<code>salt</code>的<code>SHA-256</code>或<code>SHA-512</code>用于<code>Hashing</code></p><h3 id="13-伪随机数问题"><a href="#13-伪随机数问题" class="headerlink" title="13.伪随机数问题"></a>13.伪随机数问题</h3><p>弱随机问题，纯数字4-6位都是属于弱随机</p><p>伪随机可由时间时刻推导的，php中的 <code>microtime()</code> 由一个微秒数和系统当前秒数组合</p><p>PHP中有<code>rand()</code>（范围：32767）和<code>mt_rand()</code>（范围2147483647）的随机数算法。</p><p><code>mt_rand()</code> 函数通过<code>seed</code>来计算出的伪随机数，其值固定，多次计算所得值也固定。当在统一进程中，同一个<code>seed</code>通过<code>mt_rand()</code>所生成的值都是固定的。</p><h3 id="14-web框架安全"><a href="#14-web框架安全" class="headerlink" title="14.web框架安全"></a>14.web框架安全</h3><p>产品的安全讨论，在MVC中变量等地方容易出现XSS等问题，在对的地方做对的事情，针对性的处理安全隐患，做好程序的过滤和拦截，前端拦截只是对正常用户误操作的提示，节省服务器资源，但同时必须做好后端对参数的检查过滤。在常见的漏洞中，每个部分的功能与可能发生的漏洞对应做好检查和防御</p><p>Struts2 命令执行漏洞</p><p>Spring MVC 命令执行漏洞</p><p>Django 命令执行漏洞</p><h3 id="15-拒绝服务攻击（DDOS）"><a href="#15-拒绝服务攻击（DDOS）" class="headerlink" title="15.拒绝服务攻击（DDOS）"></a>15.拒绝服务攻击（DDOS）</h3><h4 id="DDOS-分布式拒绝服务攻击"><a href="#DDOS-分布式拒绝服务攻击" class="headerlink" title="DDOS 分布式拒绝服务攻击"></a>DDOS 分布式拒绝服务攻击</h4><p>有<code>SYN flood</code>、<code>UDP flood</code>、<code>ICMP flood</code>等，之前小东的网站遇到过<code>NTP flood</code>的攻击，放大倍数在700左右，最后直接关了服务器的NTP服务。</p><p>例如对于<code>SYN flood</code> 有<code>SYN cookie/SYN proxy</code>、<code>safereset</code>等算法，大致思想史根据访问频率来判断是否及时丢弃来自该IP的包，在众多对抗DDOS的产品中，都是根据DDOS的特征结合相应的算法来进行流量清洗。对抗DDOS的网络设备可串联或者并联在网络的出口处。</p><h4 id="应用层的DDOS"><a href="#应用层的DDOS" class="headerlink" title="应用层的DDOS"></a>应用层的DDOS</h4><p>发生在应用层，三次TCP握手已经完成，也叫做<code>CC攻击</code>(<code>Challenge Collapasar</code>)，其原理就是对于web应用上比较耗费资源的页面进行频繁的访问，导致服务器的资源耗尽而造成的DDOS攻击。还有就是黑客入侵了某个流量非常大的网站，然后内嵌攻击目标的网站<code>iframe</code>网页，导致目标网站直接拒绝服务。</p><h4 id="资源耗尽型攻击："><a href="#资源耗尽型攻击：" class="headerlink" title="资源耗尽型攻击："></a>资源耗尽型攻击：</h4><p>构造<code>畸形HTTP</code>请求（不完整<code>HTTP</code>请求），服务端认为<code>HTTP Header</code>没有结束，便会保持连接不释放，当构造多个连接后，服务器连接数达到上限，其他正常客户端便没法儿和服务器建立连接，以此造成业务影响。</p><p>例如：<code>HTTP POST DOS</code>，这个的原理是构造一个<code>content-length</code>很大的包，但是以<code>10~100s</code>不等间隔发一个字节，保持连接不断开，以此占用<code>WEB Server</code>的可用连接数，导致<code>DOS</code>，这种情况可使用WEB应用防火墙</p><h4 id="Server-Limit-DOS"><a href="#Server-Limit-DOS" class="headerlink" title="Server Limit DOS"></a>Server Limit DOS</h4><p><code>Cookie</code>也能造成<code>DOS</code>，当限制<code>header</code>头大小的时候，一个超长的<code>cookie</code>，服务器会返回<code>4xx</code>错误</p><h4 id="ReDOS"><a href="#ReDOS" class="headerlink" title="ReDOS"></a>ReDOS</h4><p>正则表达式都是基于<code>NFA</code>（<code>Nondeterminstic Finite Automanton</code>）的，它是一个状态机，某些正则表达式写得不好，在黑客的精心构造下也有可能造成资源消耗过大而导致<code>DOS</code>，存在ReDOS的写法开发人员应当注意，参考文章《<a href="http://www.freebuf.com/articles/network/124422.html" target="_blank" rel="noopener">浅析ReDoS的原理与实践</a>》</p><hr><h3 id="16-PHP安全"><a href="#16-PHP安全" class="headerlink" title="16.PHP安全"></a>16.PHP安全</h3><p>文件包含漏洞：本地文件包含、远程文件包含</p><p>%00截断     </p><p>操作系统对目录最大长度的限制，达到截断的目的，windows为256字节、linux下4096字节达到最大字节，最大值长度之后的字符将被丢弃</p><p>目录遍历漏洞：可返回上层目录，用不同的编码来绕过，php配置了open_basedir时，可使这种攻击无效</p><p>要解决文件包含漏洞，避免包含动态的变量</p><p>PHP伪协议</p><p>PHP现在很多中小型企业都在使用，这个脚本语言开发程序非常方便快捷，封装了很多的内置函数，然而就是这些内置函数在不恰当情况下使用，就导致了应用漏洞存在，常见有文件包含，变量覆盖，代码执行的漏洞 </p><h3 id="17-互联网公司的运营"><a href="#17-互联网公司的运营" class="headerlink" title="17.互联网公司的运营"></a>17.互联网公司的运营</h3><p>涉及到宏观安全思维，企业安全管理、安全开发和安全运营</p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>hexo + github 搭建博客</title>
    <link href="http://yoursite.com/2018/08/09/hexo-github-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/08/09/hexo-github-搭建博客/</id>
    <published>2018-08-09T14:40:02.000Z</published>
    <updated>2018-08-09T16:02:33.564Z</updated>
    
    <content type="html"><![CDATA[<hr><a id="more"></a><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>win8.1专业版   64位   </p><h1 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h1><p>1.首先你得有一个github账号,注册详情见百度</p><p>2.下载安装 git for windows  ，笔者用的版本是Git-2.18.0-64</p><p>一路默认安装即可</p><p>验证安装：</p><p>在桌面任意位置右击选项中有 Git  Bash Here  </p><p>cmd下(win+R打开，回车打开)</p><p><code>git --version</code></p><p>3.下载安装node.js      笔者用的是node-v10.7.0-x64</p><p>验证安装： cmd下</p><p><code>node -v</code></p><p>4.npm会默认安装</p><h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><p>在github下新建仓库，点击头像，选择your repository</p><p>New repository</p><p>注意，仓库名格式必须是$github用户名.github.io  这就是以后访问的博客地址</p><p>注册的邮箱是必须验证才会成功的</p><p>仓库创建成功不会立即生效，需要等待10分钟左右</p><h1 id="ssh-key"><a href="#ssh-key" class="headerlink" title="ssh key"></a>ssh key</h1><p>配置ssh  key 用于本地与github进行数据交换</p><p>在windows下的Git Bash下执行如下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;liuxianan&quot;#你的github用户名</span><br><span class="line">git config --global user.email  &quot;xxx@qq.com&quot;#填写你的github注册邮箱</span><br></pre></td></tr></table></figure><p>生成ssh密钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/. ssh#检查本机已存在的ssh密钥</span><br><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;#生成密钥</span><br></pre></td></tr></table></figure><p>连续按回车三次（使用默认ssh密钥生成策略），密钥生成成功，存于本地用户目录(~)，打开.ssh\id_rsa.pub文件，并复制其中内容</p><p>打开你的github主页，进入个人设置-&gt; SSH and GPG keys -&gt; New SSH key： </p><p>title任意填写，将内容复制到key中即可</p><h1 id="测试ssh"><a href="#测试ssh" class="headerlink" title="测试ssh"></a>测试ssh</h1><p>windows的GitBash下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com #注意邮箱地址不用改</span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><blockquote><p>Hi xxx! You’ve successfully authenticated, but GitHub does not provide shell access.</p></blockquote><p>看到这个信息说明SSH已配置成功！</p><h1 id="使用Hexo"><a href="#使用Hexo" class="headerlink" title="使用Hexo"></a>使用Hexo</h1><p>以下所有命令建议在git bash下运行</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>​    验证安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>​        在本地主机上建立一个blog文件夹，用于日后代码，博客的存放</p><p>​        进入此目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>​        此目录会自动生成hexo相关文件</p><p>​        注：此处目录中会存在一个_config.yml的文件，为hexo的主配置文件，以后我们称其为站点配置文件</p><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><p>​    hexo目录中执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g#生成静态页面</span><br><span class="line">hexo s#启动本地预览服务</span><br></pre></td></tr></table></figure><p>​    执行命令后，hexo会在public文件夹生成相关html文件，用于本地预览与后期提交github</p><p>​    浏览器访问<a href="http://127.0.0.1:4000，即可看到hexo默认生成页面hello,world" target="_blank" rel="noopener">http://127.0.0.1:4000，即可看到hexo默认生成页面hello,world</a></p><p>如若出错，见文章底部</p><h1 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h1><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &apos;my-first-blog&apos;</span><br></pre></td></tr></table></figure><p>‘ ‘中为你本篇博客的名称，执行完成后，会自动在\hexo\source_posts\目录下生成.md文件，</p><p>只要打开这个文件就可以写博客了</p><h1 id="上传到github"><a href="#上传到github" class="headerlink" title="上传到github"></a>上传到github</h1><h2 id="上传前的配置"><a href="#上传前的配置" class="headerlink" title="上传前的配置"></a>上传前的配置</h2><p>配置站点配置文件_config.yml中的deploy部分：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>安装上传插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><p>在hexo根目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>会将有所改动的内容全部提交至github</p><h1 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;postName&quot;#新建文章</span><br><span class="line">hexo new page &quot;pageName&quot;#新建页面</span><br><span class="line">hexo generate#生成静态页面至public目录</span><br><span class="line">hexo server#开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</span><br><span class="line">hexo deploy#部署到GitHub</span><br><span class="line">hexo help#查看帮助</span><br><span class="line">hexo version#查看Hexo的版本</span><br><span class="line">hexo clean#清除缓存</span><br><span class="line"></span><br><span class="line">缩写：</span><br><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br><span class="line"></span><br><span class="line">组合命令：</span><br><span class="line">hexo s -g#生成并本地预览</span><br><span class="line">hexo d -g#生成并上传</span><br></pre></td></tr></table></figure><h1 id="更改默认hexo主题及优化"><a href="#更改默认hexo主题及优化" class="headerlink" title="更改默认hexo主题及优化"></a>更改默认hexo主题及优化</h1><h2 id="主题下载"><a href="#主题下载" class="headerlink" title="主题下载"></a>主题下载</h2><p>进入hexo根目录</p><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>执行完成后会在hexo\themes\ 目录下生成next目录</p><p>next目录下也会存在一个_config.yml文件，这是next主题的主配置文件，以后我们称为主题配置文件</p><h2 id="主题应用"><a href="#主题应用" class="headerlink" title="主题应用"></a>主题应用</h2><p>配置站点配置文件</p><p>寻找theme字段，将其值修改为next（next前后都有一个空格，否则会报错）</p><h2 id="主题预览"><a href="#主题预览" class="headerlink" title="主题预览"></a>主题预览</h2><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean#清除缓存</span><br><span class="line">hexo g#重新生成代码</span><br><span class="line">hexo s#部署到本地</span><br></pre></td></tr></table></figure><p>浏览器访问 <a href="http://127.0.0.1:4000" target="_blank" rel="noopener">http://127.0.0.1:4000</a> 查看效果</p><h2 id="主题简单优化"><a href="#主题简单优化" class="headerlink" title="主题简单优化"></a>主题简单优化</h2><h3 id="设置布局"><a href="#设置布局" class="headerlink" title="设置布局"></a>设置布局</h3><p>主题配置文件中</p><p>寻找 Scheme 字段，next提供三种默认主题布局，将你想使用的布局取消注释即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br></pre></td></tr></table></figure><ul><li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li><li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li><li>Pisces - 双栏 Scheme，小家碧玉似的清新</li></ul><h3 id="设置显示语言"><a href="#设置显示语言" class="headerlink" title="设置显示语言"></a>设置显示语言</h3><p>站点配置文件中</p><p>寻找<code>language</code> 字段，设置其值为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-Hans</span><br></pre></td></tr></table></figure><p>语言文件位于hexo\themes\next\languages目录下</p><h3 id="设置菜单"><a href="#设置菜单" class="headerlink" title="设置菜单"></a>设置菜单</h3><p>主题配置文件中</p><p>寻找menu字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /#主页</span><br><span class="line">  archives: /archives#归档页</span><br><span class="line">  #about: /about#关于页</span><br><span class="line">  #categories: /categories#分类页</span><br><span class="line">  tags: /tags#标签页</span><br><span class="line">  #commonweal: /404.html#公益404</span><br></pre></td></tr></table></figure><p>除主页与归档页外，其余页面需要手动创建</p><p>每行中 || 后的内容为指定此menu的图标</p><h4 id="添加标签页"><a href="#添加标签页" class="headerlink" title="添加标签页"></a>添加标签页</h4><h5 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h5><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>命令执行后，hexo\source\tags目录中生成index.md文件</p><h5 id="设置页面类型"><a href="#设置页面类型" class="headerlink" title="设置页面类型"></a>设置页面类型</h5><p>修改此index.md文件为(添加type行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2016-11-15 19:10:05</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="设置具体博客文章tags"><a href="#设置具体博客文章tags" class="headerlink" title="设置具体博客文章tags"></a>设置具体博客文章tags</h5><p>对于hexo\source_post目录下具体博客文章设置tags(设置tags行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 基于Hexo和Github搭建博客</span><br><span class="line">date: 2016-11-09</span><br><span class="line">tags: [npm, hexo, github]</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="添加分类页面"><a href="#添加分类页面" class="headerlink" title="添加分类页面"></a>添加分类页面</h4><h5 id="新建页面-1"><a href="#新建页面-1" class="headerlink" title="新建页面"></a>新建页面</h5><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>命令执行后，hexo\source\categories目录中生成index.md文件</p><h5 id="设置页面类型-1"><a href="#设置页面类型-1" class="headerlink" title="设置页面类型"></a>设置页面类型</h5><p>修改此index.md文件为(添加categories行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2016-11-15 19:11:13</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="设置具体博客文章categories"><a href="#设置具体博客文章categories" class="headerlink" title="设置具体博客文章categories"></a>设置具体博客文章categories</h5><p>对于hexo\source_post目录下具体博客文章设置categories(设置categories行)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 基于Hexo和Github搭建博客</span><br><span class="line">date: 2016-11-09</span><br><span class="line">tags: [npm, hexo, github]</span><br><span class="line">categories: 搭建博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h4 id="添加关于页面"><a href="#添加关于页面" class="headerlink" title="添加关于页面"></a>添加关于页面</h4><h5 id="添加页面"><a href="#添加页面" class="headerlink" title="添加页面"></a>添加页面</h5><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>命令执行后，hexo\source\about目录中生成index.md文件</p><h5 id="修改index-md文件"><a href="#修改index-md文件" class="headerlink" title="修改index.md文件"></a>修改index.md文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: about</span><br><span class="line">date: 2016-11-15 19:08:50</span><br><span class="line">---</span><br><span class="line">## 关于我</span><br><span class="line"></span><br><span class="line">一只学习的小菜鸟，欢迎分享知识。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">QQ：</span><br><span class="line">Email:</span><br></pre></td></tr></table></figure><h3 id="设置站内搜索"><a href="#设置站内搜索" class="headerlink" title="设置站内搜索"></a>设置站内搜索</h3><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>站点配置文件中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><h3 id="hexo-首页文章只显示一部分"><a href="#hexo-首页文章只显示一部分" class="headerlink" title="hexo 首页文章只显示一部分"></a>hexo 首页文章只显示一部分</h3><p>在博客文章适当位置添加<code>&lt;!--more--&gt;</code> 标记即可，可在文首加———————-</p><p>然后再添加&lt;! –more–&gt;  即可实现只显示标题的效果</p><h3 id="网站底部字数统计（非必须）"><a href="#网站底部字数统计（非必须）" class="headerlink" title="网站底部字数统计（非必须）"></a>网站底部字数统计（非必须）</h3><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>hexo\themes\next\/layout_partials\footer.swig文件中末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="修改文章底部的带-号的标签（非必须）"><a href="#修改文章底部的带-号的标签（非必须）" class="headerlink" title="修改文章底部的带#号的标签（非必须）"></a>修改文章底部的带#号的标签（非必须）</h3><p>修改hexo\themes\next\layout_macro\post.swig文件，搜索<code>rel=&quot;tag&quot;&gt;#</code> ，改为<code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code> </p><h3 id="在每篇文章末尾统一添加“本文结束”标记（非必须）"><a href="#在每篇文章末尾统一添加“本文结束”标记（非必须）" class="headerlink" title="在每篇文章末尾统一添加“本文结束”标记（非必须）"></a>在每篇文章末尾统一添加“本文结束”标记（非必须）</h3><p>在hexo\themes\next\layout_macro目录下，新建<code>passage-end-tag.swig</code> ，并添加如下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢您的阅读-------------&lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>接着打开hexo\themes\next\layout_macro\post.swig<code>文件，在</code>post-body 之后添加 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &#123;% if not is_index %&#125;</span><br><span class="line">    &#123;% include &apos;passage-end-tag.swig&apos; %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>打开主题配置文件，在末尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br></pre></td></tr></table></figure><h3 id="主页文章添加阴影效果（非必须）"><a href="#主页文章添加阴影效果（非必须）" class="headerlink" title="主页文章添加阴影效果（非必须）"></a>主页文章添加阴影效果（非必须）</h3><p>打开hexo\themes\next\source\css_custom\custom.styl文件，添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 主页文章添加阴影效果</span><br><span class="line"> .post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="设置网站图标（非必须）"><a href="#设置网站图标（非必须）" class="headerlink" title="设置网站图标（非必须）"></a>设置网站图标（非必须）</h3><p>在<a href="http://www.easyicon.net/" target="_blank" rel="noopener">EasyIcon</a>中找一张（32*32）和一张（16x16）的ico图标,或者去别的网站下载或者制作，并将图标名称改为<code>favicon32x32.ico</code>和<code>favicon16x16.ico</code>，然后把图标放在hexo\themes\next\source\images 里，并且修改主题配置文件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">icon: </span><br><span class="line">mall: /images/favicon16x16.ico</span><br><span class="line">medium: /images/favicon32x32.ico</span><br></pre></td></tr></table></figure><h3 id="实现统计功能（非必须）"><a href="#实现统计功能（非必须）" class="headerlink" title="实现统计功能（非必须）"></a>实现统计功能（非必须）</h3><p>进入hexo根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>主题配置文件中，添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br></pre></td></tr></table></figure><h3 id="设置侧边栏（非必须）"><a href="#设置侧边栏（非必须）" class="headerlink" title="设置侧边栏（非必须）"></a>设置侧边栏（非必须）</h3><p>主题配置文件中</p><p>设置侧边栏在左侧或右侧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right (only for Pisces | Gemini).</span><br><span class="line">  position: left</span><br><span class="line">  #position: right</span><br></pre></td></tr></table></figure><p>设置侧边栏显示时机</p><ul><li><code>post</code> - 默认行为，在文章页面（拥有目录列表）时显示</li><li><code>always</code> - 在所有页面中都显示</li><li><code>hide</code> - 在所有页面中都隐藏（可以手动展开）</li><li><code>remove</code> - 完全移除</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Display, available value (only for Muse | Mist):</span><br><span class="line"> #  - post    expand on posts automatically. Default.</span><br><span class="line"> #  - always  expand for all pages automatically</span><br><span class="line"> #  - hide    expand only when click on the sidebar toggle icon.</span><br><span class="line"> #  - remove  Totally remove sidebar including sidebar toggle.</span><br><span class="line"> #display: post</span><br><span class="line"> #display: always</span><br><span class="line"> display: hide</span><br><span class="line"> #display: remove</span><br></pre></td></tr></table></figure><h1 id="访问线上博客"><a href="#访问线上博客" class="headerlink" title="访问线上博客"></a>访问线上博客</h1><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>浏览器访问<a href="https://yourname.github.io" target="_blank" rel="noopener">https://yourname.github.io</a> （yourname是你的github用户名）</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>若你觉得github的域名配不上你的王霸之气，那么也可以购买域名进行绑定</p><p>国内的话，去阿里云或者腾讯云买个域名就不错，也非常便宜</p><h2 id="设置域名解析"><a href="#设置域名解析" class="headerlink" title="设置域名解析"></a>设置域名解析</h2><p>cmd下ping一下你的博客域名，获取其IP地址</p><p><code>ping   $github账户名.github.io</code></p><p>在阿里云或腾讯云设置域名解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">记录类型主机记录解析线路记录值</span><br><span class="line">CNAMEWWW默认    github博客域名</span><br><span class="line">A    @    默认    github的IP地址</span><br></pre></td></tr></table></figure><h2 id="设置github部分"><a href="#设置github部分" class="headerlink" title="设置github部分"></a>设置github部分</h2><p>进入hexo\source目录，创建CNAME文件（无后缀名），添加你购买且解析的域名（完整域名，但不包含http://）</p><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><p>进入hexo目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>即可使用自定义域名访问博客，并且原博客域名也不会失效</p><h1 id="错误"><a href="#错误" class="headerlink" title="错误"></a>错误</h1><h2 id="首次更新博文-页面404"><a href="#首次更新博文-页面404" class="headerlink" title="首次更新博文,页面404"></a>首次更新博文,页面404</h2><p>可能原因</p><p>​    1.仓库名称未按照格式命名    </p><p>​        命名格式：yourname.github.io （yourname是你的github用户名）</p><p>​    2.index.html丢失</p><p>​        安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure><h1 id="参考连接"><a href="#参考连接" class="headerlink" title="参考连接"></a>参考连接</h1><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></p><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a></p><p><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html</a></p><p><a href="https://www.cnblogs.com/syd192/p/6074323.html" target="_blank" rel="noopener">https://www.cnblogs.com/syd192/p/6074323.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
    
    </summary>
    
      <category term="搭建博客" scheme="http://yoursite.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
